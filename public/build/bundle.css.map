{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Calculator.svelte",
    "NumberPicker.svelte",
    "ToggleButtons.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">import ToggleButtons from './ToggleButtons.svelte';\nimport NumberPicker from './NumberPicker.svelte';\nconst meldsStyleButtons = [\n    {\n        label: 'Żadne',\n        value: 'no',\n    },\n    {\n        label: 'Część',\n        value: 'some',\n    },\n    {\n        label: 'Wszystkie',\n        value: 'all',\n    },\n    {\n        label: 'Wszystkie od razu',\n        value: 'all-at-once',\n    },\n];\nlet meldsStyle = null;\nconst countersMap = {\n    wildcardCanastas: {\n        count: 0,\n        score: 1000,\n    },\n    naturalCanastas: {\n        count: 0,\n        score: 500,\n    },\n    mixedCanastas: {\n        count: 0,\n        score: 300,\n    },\n    jokers: {\n        count: 0,\n        score: 50,\n    },\n    acesTwos: {\n        count: 0,\n        score: 20,\n    },\n    kingsToEights: {\n        count: 0,\n        score: 10,\n    },\n    sevensToThrees: {\n        count: 0,\n        score: 5,\n    },\n    jokersOnHand: {\n        count: 0,\n        score: -50,\n    },\n    acesTwosOnHand: {\n        count: 0,\n        score: -20,\n    },\n    kingsToEightsOnHand: {\n        count: 0,\n        score: -10,\n    },\n    sevensToThreesOnHand: {\n        count: 0,\n        score: -5,\n    },\n};\nconst counterFields = [\n    {\n        label: 'Kanasty \"podpórkowe\"',\n        countersMapField: 'wildcardCanastas',\n        group: 1,\n    },\n    {\n        label: 'Kanasty naturalne',\n        countersMapField: 'naturalCanastas',\n        group: 1,\n    },\n    {\n        label: 'Kanasty mieszane',\n        countersMapField: 'mixedCanastas',\n        group: 1,\n    },\n    {\n        label: 'Jokery na stole',\n        countersMapField: 'jokers',\n        group: 2,\n    },\n    {\n        label: 'Asy i 2 na stole',\n        countersMapField: 'acesTwos',\n        group: 2,\n    },\n    {\n        label: 'K, Q, J, 10, 9, 8 na stole',\n        countersMapField: 'kingsToEights',\n        group: 2,\n    },\n    {\n        label: '7, 6, 5, 4, 3 na stole',\n        countersMapField: 'sevensToThrees',\n        group: 2,\n    },\n    {\n        label: 'Jokery na ręce',\n        countersMapField: 'jokersOnHand',\n        group: 3,\n    },\n    {\n        label: 'Asy i 2 na ręce',\n        countersMapField: 'acesTwosOnHand',\n        group: 3,\n    },\n    {\n        label: 'K, Q, J, 10, 9, 8 na ręce',\n        countersMapField: 'kingsToEightsOnHand',\n        group: 3,\n    },\n    {\n        label: '7, 6, 5, 4, 3 na ręce',\n        countersMapField: 'sevensToThreesOnHand',\n        group: 3,\n    },\n];\nconst meldCounters = counterFields.filter(fields => fields.group === 1);\nconst tableCardsCounters = counterFields.filter(fields => fields.group === 2);\nconst handCardsCounters = counterFields.filter(fields => fields.group === 3);\nlet red3sCount = 0;\nlet score = 0;\nfunction updateScore() {\n    score = 0;\n    // Melds\n    switch (meldsStyle) {\n        case 'all':\n            score += 100;\n            break;\n        case 'all-at-once':\n            score += 200;\n    }\n    // Standard numeric values\n    counterFields.forEach(field => {\n        score += countersMap[field.countersMapField].score * countersMap[field.countersMapField].count;\n    });\n    // Red threes\n    if (meldsStyle === 'all' || meldsStyle === 'all-at-once') {\n        score += red3sCount === 4 ? 800 : red3sCount * 100;\n    }\n    else {\n        score -= red3sCount === 4 ? 800 : red3sCount * 100;\n    }\n}\nfunction resetScore() {\n    meldsStyle = null;\n    red3sCount = 0;\n    counterFields.forEach(field => {\n        countersMap[field.countersMapField].count = 0;\n    });\n    updateScore();\n}\nfunction updateMeldsStyle(event) {\n    meldsStyle = event.detail;\n    if (meldsStyle === 'all' || meldsStyle === 'all-at-once') {\n        handCardsCounters.forEach(counter => {\n            countersMap[counter.countersMapField].count = 0;\n        });\n    }\n    updateScore();\n}\nfunction updateCount(countName, value) {\n    countersMap[countName].count = value;\n    updateScore();\n}\nfunction updateRed3sCount(value) {\n    red3sCount = value;\n    updateScore();\n}\n</script>\n\n<div class=\"calculator\">\n  <div class=\"form\">\n    <div class=\"row\">\n      <div class=\"field-label\">Wyłożono karty:</div>\n\n      <ToggleButtons items={meldsStyleButtons} value={meldsStyle} on:change={updateMeldsStyle} />\n    </div>\n\n    <div class=\"separator\" />\n\n    <div class=\"two-columns\">\n      {#each meldCounters as field}\n        <div class=\"row\">\n          <div class=\"field-label\">\n            {@html field.label}:\n          </div>\n\n          <NumberPicker\n            value={countersMap[field.countersMapField].count}\n            on:change={event => updateCount(field.countersMapField, event.detail)} />\n        </div>\n      {/each}\n\n      <div class=\"row\">\n        <div class=\"field-label\">Czerwone 3:</div>\n\n        <NumberPicker max={4} value={red3sCount} on:change={event => updateRed3sCount(event.detail)} />\n      </div>\n    </div>\n\n    <div class=\"separator\" />\n\n    <div class=\"two-columns\">\n      {#each tableCardsCounters as field}\n        <div class=\"row\">\n          <div class=\"field-label\">\n            {@html field.label}:\n          </div>\n\n          <NumberPicker\n            value={countersMap[field.countersMapField].count}\n            on:change={event => updateCount(field.countersMapField, event.detail)} />\n        </div>\n      {/each}\n    </div>\n\n    {#if meldsStyle === 'no' || meldsStyle === 'some'}\n      <div class=\"separator\" />\n\n      <div class=\"two-columns\">\n        {#each handCardsCounters as field}\n          <div class=\"row\">\n            <div class=\"field-label\">\n              {@html field.label}:\n            </div>\n\n            <NumberPicker\n              value={countersMap[field.countersMapField].count}\n              on:change={event => updateCount(field.countersMapField, event.detail)} />\n          </div>\n        {/each}\n      </div>\n    {/if}\n  </div>\n\n  <div class=\"footer panel panel-dark\">\n    <div class=\"score\">Wynik: <span class=\"score-value\">{score}</span></div>\n\n    <div class=\"reset-button\"><button class=\"btn btn-primary\" on:click={resetScore}>Wyczyść</button></div>\n  </div>\n</div>\n\n<style>\n  .form {\n    padding: 1rem;\n    margin-bottom: 4rem;\n  }\n\n  .row {\n    margin-bottom: 0.75rem;\n  }\n\n  .two-columns {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 2rem;\n  }\n\n  .field-label {\n    font-size: 0.75rem;\n    margin-bottom: 0.25rem;\n  }\n\n  .footer {\n    position: fixed;\n    bottom: 0.25rem;\n    left: 0.25rem;\n    right: 0.25rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .score-value {\n    font-weight: bold;\n  }\n\n  .separator {\n    width: 50%;\n    margin: auto;\n    border-top: 1px solid #c6c8ca;\n    margin-bottom: 0.5rem;\n    margin-top: 0.5rem;\n  }\n</style>\n",
    "<script lang=\"ts\">import { createEventDispatcher } from 'svelte';\nexport let min = 0;\nexport let max = 99;\nexport let value = null;\nconst dispatch = createEventDispatcher();\nfunction decrement() {\n    if (value === null) {\n        dispatch('change', 0);\n    }\n    if (value > min) {\n        dispatch('change', value - 1);\n    }\n}\nfunction increment() {\n    if (value === null) {\n        dispatch('change', 0);\n    }\n    if (value < max) {\n        dispatch('change', value + 1);\n    }\n}\n</script>\r\n\r\n<div class=\"number-picker\">\r\n  <button class=\"decrement btn btn-primary\" on:click={decrement}>-</button>\r\n  <div class=\"value\">{value}</div>\r\n  <button class=\"increment btn btn-primary\" on:click={increment}>+</button>\r\n</div>\r\n\r\n<style>\r\n  .number-picker {\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: #d6d8d9;\r\n    border-radius: 0.25rem;\r\n    padding: 0.25rem;\r\n  }\r\n\r\n  .decrement,\r\n  .value,\r\n  .increment {\r\n    flex: 1;\r\n  }\r\n\r\n  .value {\r\n    font-size: 1.2rem;\r\n    display: flex;\r\n    place-content: center;\r\n  }\r\n</style>\r\n",
    "<script lang=\"ts\">import { createEventDispatcher } from 'svelte';\n;\nexport let items;\nexport let value = null;\nconst dispatch = createEventDispatcher();\nfunction toggle(item) {\n    dispatch('change', item.value);\n}\n</script>\r\n\r\n<div class=\"toggle-buttons\">\r\n  {#each items as item}\r\n    <button\r\n      class=\"button btn btn-sm\"\r\n      class:btn-primary={value === item.value}\r\n      class:btn-secondary={value !== item.value}\r\n      on:click={() => toggle(item)}>{item.label}</button>\r\n  {/each}\r\n</div>\r\n\r\n<style>\r\n  .toggle-buttons {\r\n    display: flex;\r\n    width: 100%;\r\n  }\r\n\r\n  .button {\r\n    flex: 1 auto;\r\n    margin-right: 0.25rem;\r\n  }\r\n\r\n  .button:last-child {\r\n    margin-right: 0;\r\n  }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "AA2PE,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,IAAI,cAAC,CAAC,AACJ,aAAa,CAAE,OAAO,AACxB,CAAC,AAED,YAAY,cAAC,CAAC,AACZ,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,GAAG,CAC9B,eAAe,CAAE,IAAI,AACvB,CAAC,AAED,YAAY,cAAC,CAAC,AACZ,SAAS,CAAE,OAAO,CAClB,aAAa,CAAE,OAAO,AACxB,CAAC,AAED,OAAO,cAAC,CAAC,AACP,QAAQ,CAAE,KAAK,CACf,MAAM,CAAE,OAAO,CACf,IAAI,CAAE,OAAO,CACb,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,aAAa,AAChC,CAAC,AAED,YAAY,cAAC,CAAC,AACZ,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,UAAU,cAAC,CAAC,AACV,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC7B,aAAa,CAAE,MAAM,CACrB,UAAU,CAAE,MAAM,AACpB,CAAC;ACrQD,cAAc,cAAC,CAAC,AACd,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,gBAAgB,CAAE,OAAO,CACzB,aAAa,CAAE,OAAO,CACtB,OAAO,CAAE,OAAO,AAClB,CAAC,AAED,wBAAU,CACV,oBAAM,CACN,UAAU,cAAC,CAAC,AACV,IAAI,CAAE,CAAC,AACT,CAAC,AAED,MAAM,cAAC,CAAC,AACN,SAAS,CAAE,MAAM,CACjB,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,MAAM,AACvB,CAAC;AC3BD,eAAe,eAAC,CAAC,AACf,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,AACb,CAAC,AAED,OAAO,eAAC,CAAC,AACP,IAAI,CAAE,CAAC,CAAC,IAAI,CACZ,YAAY,CAAE,OAAO,AACvB,CAAC,AAED,sBAAO,WAAW,AAAC,CAAC,AAClB,YAAY,CAAE,CAAC,AACjB,CAAC"
}